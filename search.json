[{"path":"https://quartose.djnavarro.net/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 quartose authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://quartose.djnavarro.net/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Navarro. Author, maintainer.","code":""},{"path":"https://quartose.djnavarro.net/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Navarro D (2025). quartose: Syntactic Sugar Quarto. R package version 0.0.0.9000, https://github.com/djnavarro/quartose.","code":"@Manual{,   title = {quartose: Syntactic Sugar for Quarto},   author = {Danielle Navarro},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/djnavarro/quartose}, }"},{"path":"https://quartose.djnavarro.net/index.html","id":"quartose","dir":"","previous_headings":"","what":"Syntactic Sugar for Quarto","title":"Syntactic Sugar for Quarto","text":"analysing data sets R, often convenient wrap analysis within quarto document reporting purposes: containing analysis components within single easy--navigate HTML document generally kindness reader. One consequence , however, sometimes find wanting write code within R code chunk generate parts quarto document . instance, iterating many analyses within single R chunk, might want chunk generate quarto section headers, tabsets . possible knitr engine (evaluates R code chunks) allows generate “asis” output later captured quarto parser; output formatted look like correct quarto syntax, captured translated appropriate HTML. purpose quartose package provide helper functions make task little easier. reason writing conceptually straightfoward generate quarto syntax within R, practical issues juggling knitr, quarto, R want resulting document look clean. ’s wrote quartose : want nice, clean outputs get take care little nuances, also don’t want add lots tiresome formatting code analysis documents. decided suck , write little package handles , never think .","code":""},{"path":"https://quartose.djnavarro.net/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Syntactic Sugar for Quarto","text":"can install development version quartose GitHub :","code":"# install.packages(\"pak\") pak::pak(\"djnavarro/quartose\")"},{"path":"https://quartose.djnavarro.net/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Syntactic Sugar for Quarto","text":"basic example shows solve common problem:","code":"library(quartose) ## basic example code"},{"path":"https://quartose.djnavarro.net/reference/format_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a quarto object — format_quarto","title":"Format a quarto object — format_quarto","text":"Creates formatted representation quarto object form suitable printing. calling knitr::knit_print() quarto object, relevant format() method called first, formatted version printed document. Note base print() method quarto objects call format().","code":""},{"path":"https://quartose.djnavarro.net/reference/format_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a quarto object — format_quarto","text":"","code":"# S3 method for class 'quarto_section' format(x, ...)  # S3 method for class 'quarto_tabset' format(x, ...)  # S3 method for class 'quarto_div' format(x, ...)  # S3 method for class 'quarto_span' format(x, ...)  # S3 method for class 'quarto_markdown' format(x, ...)  # S3 method for class 'quarto_group' format(x, ...)"},{"path":"https://quartose.djnavarro.net/reference/format_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a quarto object — format_quarto","text":"x quarto object ... arguments (ignored)","code":""},{"path":"https://quartose.djnavarro.net/reference/format_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a quarto object — format_quarto","text":"formatted quarto object, sometimes single string (e.g., quarto_section objects), can list strings /plot objects (e.g., quarto_tabset objects)","code":""},{"path":"https://quartose.djnavarro.net/reference/format_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format a quarto object — format_quarto","text":"intent behind format() methods quarto objects create ready--print representation almost identical printed quarto document print method called. , formatted version quarto object usually string list strings, can also include plot objects yet rendered. resulting representation usually pretty, though passed cat() generally readable.","code":""},{"path":"https://quartose.djnavarro.net/reference/format_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a quarto object — format_quarto","text":"","code":"# formatted sections, spans and divs sec <- quarto_section(\"Header\", level = 2L) spn <- quarto_span(\"Content\", class = \"underline\") div <- quarto_div(\"Content\", class = \"content-margin\")  format(sec) #> [1] \"\\n\\n## Header\\n\\n\" format(spn) #> [1] \"[Content]{.underline}\" format(div) #> [1] \"\\n\\n::: {.content-margin}\\n\\n Content \\n\\n:::\\n\\n\"  # formatted tabsets tbs <- quarto_tabset(   content = list(tab1 = 1:10, tab2 = \"hello\"),   title = \"Header\",   level = 2L )  format(tbs) #> [[1]] #> [1] \"\\n\\n## Header\\n\\n\" #>  #> [[2]] #> [1] \"\\n\\n::: {.panel-tabset}\\n\\n\" #>  #> [[3]] #> [1] \"\\n\\n### tab1\\n\\n\" #>  #> [[4]] #> [1] \"<pre>\" #>  #> [[5]] #> [1] \" [1]  1  2  3  4  5  6  7  8  9 10\" #>  #> [[6]] #> [1] \"<\/pre>\" #>  #> [[7]] #> [1] \"\\n\\n### tab2\\n\\n\" #>  #> [[8]] #> [1] \"<pre>\" #>  #> [[9]] #> [1] \"[1] \\\"hello\\\"\" #>  #> [[10]] #> [1] \"<\/pre>\" #>  #> [[11]] #> [1] \"\\n\\n::: \\n\\n\" #>   # formatted groups and markdown  mkd <- quarto_markdown(list(\"- this is a\", \"- markdown list\"), sep = \"\\n\") gps <- quarto_group(list(div, mkd))  format(mkd) #> [1] \"- this is a\\n- markdown list\" format(gps) #> [[1]] #> [1] \"\\n\\n::: {.content-margin}\\n\\n Content \\n\\n:::\\n\\n\" #>  #> [[2]] #> [1] \"- this is a\\n- markdown list\" #>"},{"path":"https://quartose.djnavarro.net/reference/knit_print.quarto_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a quarto object with knitr — knit_print.quarto_object","title":"Print a quarto object with knitr — knit_print.quarto_object","text":"Prints quarto object. calling knitr::knit_print() quarto object, relevant format() method called first, formatted version printed document.","code":""},{"path":"https://quartose.djnavarro.net/reference/knit_print.quarto_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a quarto object with knitr — knit_print.quarto_object","text":"","code":"# S3 method for class 'quarto_object' knit_print(x, ...)"},{"path":"https://quartose.djnavarro.net/reference/knit_print.quarto_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a quarto object with knitr — knit_print.quarto_object","text":"x quarto object ... arguments (ignored)","code":""},{"path":"https://quartose.djnavarro.net/reference/knit_print.quarto_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a quarto object with knitr — knit_print.quarto_object","text":"Invisibly returns NULL.","code":""},{"path":"https://quartose.djnavarro.net/reference/knit_print.quarto_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a quarto object with knitr — knit_print.quarto_object","text":"Additional details...","code":""},{"path":"https://quartose.djnavarro.net/reference/quarto_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamically generate quarto syntax — quarto_object","title":"Dynamically generate quarto syntax — quarto_object","text":"Define quarto objects insertion document. Intended used inside quarto document, within knitr code chunk results: asis option set.","code":""},{"path":"https://quartose.djnavarro.net/reference/quarto_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamically generate quarto syntax — quarto_object","text":"","code":"quarto_section(title, level)  quarto_tabset(content, level, title = NULL, names = NULL)  quarto_div(content, class = NULL, sep = \"\")  quarto_span(content, class = NULL, sep = \"\")  quarto_group(content, sep = \"\")  quarto_markdown(content, sep = \"\")"},{"path":"https://quartose.djnavarro.net/reference/quarto_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamically generate quarto syntax — quarto_object","text":"title Section title, character string. level Header level, integer 1 6. content Tab content list. names Names tabs (defaults names(content)). class CSS class (vector classes) supplied. sep Separator used merging content.","code":""},{"path":"https://quartose.djnavarro.net/reference/quarto_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamically generate quarto syntax — quarto_object","text":"functions always return object parent S3 class \"quarto_object\", addition specific S3 class corresponding function (e.g., quarto_section() objects also possess \"quarto_section\" class). printed, object rendered character vector length 1 containing quarto syntax inserts HTML section header document.","code":""},{"path":"https://quartose.djnavarro.net/reference/quarto_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dynamically generate quarto syntax — quarto_object","text":"Additional details...","code":""},{"path":"https://quartose.djnavarro.net/reference/quarto_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamically generate quarto syntax — quarto_object","text":"","code":"sec <- quarto_section(\"A level-two header\", level = 2L)   # Use knitr::knit_print() to see the rendered quarto syntax knitr::knit_print(sec) #>  #>  #> ## A level-two header #>  #>    # Use base::print() to see the structure of the object print(sec) #> $title #> [1] \"A level-two header\" #>  #> $level #> [1] 2 #>  #> attr(,\"class\") #> [1] \"quarto_section\" \"quarto_object\"   spn <- quarto_span(\"This is underlined\", class = \"underline\") knitr::knit_print(spn) #> [This is underlined]{.underline}    div <- quarto_div(\"This is a callout note\", class = \"callout-note\") knitr::knit_print(div) #>  #>  #> ::: {.callout-note} #>  #>  This is a callout note  #>  #> ::: #>  #>    tbs <- quarto_tabset(list(tab1 = 1:10, tab2 = \"hello\"), level = 3L) knitr::knit_print(tbs) #>  #>  #> ::: {.panel-tabset} #>  #>   #>  #>  #> ### tab1 #>  #>   #> <pre>  #>  [1]  1  2  3  4  5  6  7  8  9 10  #> <\/pre>  #>  #>  #> ### tab2 #>  #>   #> <pre>  #> [1] \"hello\"  #> <\/pre>  #>  #>  #> :::  #>  #>    mkd <- quarto_markdown(list(\"- a markdown\", \"- list\"), sep = \"\\n\") knitr::knit_print(mkd) #> - a markdown #> - list   grp <- quarto_group(list(   quarto_div(\"This is a callout note\", class = \"callout-note\"),   quarto_div(\"This is a callout tip\", class = \"callout-tip\") )) knitr::knit_print(grp) #>  #>  #> ::: {.callout-note} #>  #>  This is a callout note  #>  #> ::: #>  #>   #>  #>  #> ::: {.callout-tip} #>  #>  This is a callout tip  #>  #> ::: #>  #>"}]
